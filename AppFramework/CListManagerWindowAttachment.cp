#include "CListManagerWindowAttachment.h"#include "CWindow.h"#include "StPortChanger.h"#include <stdio.h>#include <string.h>CListManagerWindowAttachment::CListManagerWindowAttachment(CWindow *wd, Rect *box): CWindowAttachment(wd) {	WindowPtr window = wd->ToMac();	StPortChanger portChanger(window);		//printf("Creating List.\n");	const char* str = NULL;	Rect bodyBox = *box;	bodyBox.right -= 15; // Account for scroll bar.	Rect dataBounds = { 0, 0, 3, 1};	Point cellSize = { 0, 0 };	Point cell = { 0, 0 };	mList = LNew(&bodyBox, &dataBounds, cellSize, 0, window, true, false, false, true);		printf("Created List.\n");	str = "First Row";	LSetCell(str, strlen(str), cell, mList);	cell.v += 1;	str = "Second Row";	LSetCell(str, strlen(str), cell, mList);	cell.v += 1;	str = "Third Row";	LSetCell(str, strlen(str), cell, mList);	printf("Populated List.\n");}CListManagerWindowAttachment::~CListManagerWindowAttachment() {	printf("Disposing List.\n");	LDispose(mList);	mList = NULL;}void CListManagerWindowAttachment::Draw() {	printf("Drawing List.\n");	ForeColor(whiteColor);	PaintRect(&(**mList).rView);		ForeColor(blackColor);	LUpdate((**mList).port->visRgn, mList);		Rect borderBox = (**mList).rView;	InsetRect(&borderBox, -1, -1);	FrameRect(&borderBox);}bool CListManagerWindowAttachment::HandleMouseDown(const EventRecord &event) {	Point pos = event.where;	mWindow->GlobalToLocalPoint(&pos);	Rect box = (**mList).rView;	box.right += 15;	if (!PtInRect(pos, &box)) {		return false;	}		if (LClick(pos, event.modifiers, mList)) {		printf("List double clicked.\n");		// Handle double click.	}	return true;}void CListManagerWindowAttachment::ResizedWindowFrom(Point oldSize) {	printf("List Mgr resizing.\n");	InvalidateListRect();		Rect box = (**mList).rView;	ResizedFromOldToNewWindowRect(&box, oldSize, &(**mList).port->portRect);	LSize(box.right - box.left, box.bottom - box.top, mList);	(**mList).rView = box;		(**mList).cellSize.h = box.right - box.left;		InvalidateListRect();}void CListManagerWindowAttachment::InvalidateListRect() {	StPortChanger portChanger(mWindow->ToMac());	Rect box = (**mList).rView;	InsetRect(&box, -1, -1);	box.right += 15;	InvalRect(&box);}	void CListManagerWindowAttachment::Activate() {}void CListManagerWindowAttachment::Deactivate() {}